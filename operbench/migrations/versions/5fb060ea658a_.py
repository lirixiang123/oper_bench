"""empty message

Revision ID: 5fb060ea658a
Revises: 
Create Date: 2020-03-30 18:29:20.591702

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5fb060ea658a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('api_permission',
    sa.Column('api_permission_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('api_permission_url', sa.String(length=128), nullable=True),
    sa.Column('api_permission_method_type', sa.Enum('GET', 'POST', 'PUT', 'PATCH', 'DELETE', name='methodtype'), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('api_permission_id')
    )
    op.create_table('business_unit',
    sa.Column('business_unit_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('business_unit_name', sa.String(length=64), nullable=True),
    sa.Column('business_unit_name_cn', sa.String(length=64), nullable=True),
    sa.Column('business_unit_note', sa.Text(), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('business_unit_id')
    )
    op.create_table('idc',
    sa.Column('idc_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('idc_name', sa.String(length=64), nullable=True),
    sa.Column('idc_name_cn', sa.String(length=64), nullable=True),
    sa.Column('idc_region', sa.String(length=64), nullable=True),
    sa.Column('idc_isp', sa.String(length=64), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('idc_id')
    )
    op.create_table('manufactory',
    sa.Column('manufactory_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('manufactory_name', sa.String(length=64), nullable=True),
    sa.Column('manufactory_tel', sa.String(length=11), nullable=True),
    sa.Column('manufactory_note', sa.Text(), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('manufactory_id')
    )
    op.create_table('os',
    sa.Column('os_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('os_type', sa.String(length=64), nullable=True),
    sa.Column('os_version', sa.String(length=128), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('os_id')
    )
    op.create_table('role',
    sa.Column('role_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('role_id')
    )
    op.create_table('tasks',
    sa.Column('task_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('task_name', sa.String(length=64), nullable=False),
    sa.Column('task_command', sa.String(length=256), nullable=False),
    sa.Column('task_args', sa.String(length=256), nullable=True),
    sa.Column('task_host', sa.String(length=16), nullable=False),
    sa.PrimaryKeyConstraint('task_id')
    )
    op.create_table('asset',
    sa.Column('asset_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('asset_asset_type', sa.Enum('SERVER', 'NETWORK', name='assettype'), nullable=True),
    sa.Column('asset_hostname', sa.String(length=64), nullable=True),
    sa.Column('asset_sn', sa.String(length=128), nullable=False),
    sa.Column('manufactory_id', sa.Integer(), nullable=True),
    sa.Column('asset_model', sa.String(length=64), nullable=True),
    sa.Column('asset_warranty', sa.DateTime(), nullable=True),
    sa.Column('business_unit_id', sa.Integer(), nullable=True),
    sa.Column('admin_id', sa.Integer(), nullable=True),
    sa.Column('idc_id', sa.Integer(), nullable=True),
    sa.Column('asset_floor', sa.Integer(), nullable=True),
    sa.Column('asset_cabinet_num', sa.String(length=32), nullable=True),
    sa.Column('asset_cabinet_order', sa.Integer(), nullable=True),
    sa.Column('asset_status', sa.Enum('INIT', 'ONLINE', 'OFFLINE', 'UNREACHABLE', 'MAINTAIN', name='statustype'), nullable=True),
    sa.Column('asset_maintain_record', sa.Text(), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['business_unit.business_unit_id'], ),
    sa.ForeignKeyConstraint(['business_unit_id'], ['business_unit.business_unit_id'], ),
    sa.ForeignKeyConstraint(['idc_id'], ['idc.idc_id'], ),
    sa.ForeignKeyConstraint(['manufactory_id'], ['manufactory.manufactory_id'], ),
    sa.PrimaryKeyConstraint('asset_id'),
    sa.UniqueConstraint('asset_sn')
    )
    op.create_table('role_permissions',
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('api_permission_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['api_permission_id'], ['api_permission.api_permission_id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.role_id'], )
    )
    op.create_table('user_profile',
    sa.Column('user_profile_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_profile_name', sa.String(length=32), nullable=False),
    sa.Column('user_profile_email', sa.String(length=32), nullable=False),
    sa.Column('user_profile_mobile', sa.String(length=11), nullable=True),
    sa.Column('password', sa.String(length=128), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.role_id'], ),
    sa.PrimaryKeyConstraint('user_profile_id'),
    sa.UniqueConstraint('user_profile_email')
    )
    op.create_table('api_token',
    sa.Column('api_token_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('api_token_appid', sa.String(length=32), nullable=True),
    sa.Column('api_token_secretkey', sa.String(length=32), nullable=True),
    sa.Column('user_profile_id', sa.Integer(), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_profile_id'], ['user_profile.user_profile_id'], ),
    sa.PrimaryKeyConstraint('api_token_id')
    )
    op.create_table('business_unit_users',
    sa.Column('user_profile_id', sa.Integer(), nullable=True),
    sa.Column('business_unit_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['business_unit_id'], ['business_unit.business_unit_id'], ),
    sa.ForeignKeyConstraint(['user_profile_id'], ['user_profile.user_profile_id'], )
    )
    op.create_table('server',
    sa.Column('server_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('asset_id', sa.Integer(), nullable=True),
    sa.Column('server_cpu_count', sa.Integer(), nullable=True),
    sa.Column('server_cpu_cour_count', sa.Integer(), nullable=True),
    sa.Column('server_cpu_model', sa.String(length=64), nullable=True),
    sa.Column('server_raid_type', sa.String(length=6), nullable=True),
    sa.Column('server_ram_size', sa.Integer(), nullable=True),
    sa.Column('server_os', sa.Integer(), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['asset.asset_id'], ),
    sa.ForeignKeyConstraint(['server_os'], ['os.os_id'], ),
    sa.PrimaryKeyConstraint('server_id')
    )
    op.create_table('tasklog',
    sa.Column('tasklog_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('tasklog_tid', sa.String(length=64), nullable=False),
    sa.Column('tasklog_result', sa.Text(), nullable=True),
    sa.Column('tasklog_create_time', sa.DateTime(), nullable=True),
    sa.Column('user', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.task_id'], ),
    sa.ForeignKeyConstraint(['user'], ['user_profile.user_profile_id'], ),
    sa.PrimaryKeyConstraint('tasklog_id')
    )
    op.create_table('api_token_permissions',
    sa.Column('api_token_id', sa.Integer(), nullable=True),
    sa.Column('api_permission_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['api_permission_id'], ['api_permission.api_permission_id'], ),
    sa.ForeignKeyConstraint(['api_token_id'], ['api_token.api_token_id'], )
    )
    op.create_table('disk',
    sa.Column('disk_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('disk_sn', sa.String(length=128), nullable=False),
    sa.Column('server_id', sa.Integer(), nullable=True),
    sa.Column('disk_slot', sa.String(length=10), nullable=True),
    sa.Column('manufactory_id', sa.Integer(), nullable=True),
    sa.Column('disk_model', sa.String(length=32), nullable=True),
    sa.Column('disk_capacity', sa.String(length=10), nullable=True),
    sa.Column('disk_iface_type', sa.Enum('Disk', name='diskifacetype'), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['manufactory_id'], ['manufactory.manufactory_id'], ),
    sa.ForeignKeyConstraint(['server_id'], ['server.server_id'], ),
    sa.PrimaryKeyConstraint('disk_id'),
    sa.UniqueConstraint('disk_sn')
    )
    op.create_table('memory',
    sa.Column('memory_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('memory_sn', sa.String(length=128), nullable=False),
    sa.Column('server_id', sa.Integer(), nullable=True),
    sa.Column('memory_slot', sa.String(length=10), nullable=True),
    sa.Column('manufactory_id', sa.Integer(), nullable=True),
    sa.Column('memory_model', sa.String(length=32), nullable=True),
    sa.Column('memory_capacity', sa.String(length=10), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['manufactory_id'], ['manufactory.manufactory_id'], ),
    sa.ForeignKeyConstraint(['server_id'], ['server.server_id'], ),
    sa.PrimaryKeyConstraint('memory_id'),
    sa.UniqueConstraint('memory_sn')
    )
    op.create_table('nic',
    sa.Column('nic_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('nic_name', sa.String(length=12), nullable=True),
    sa.Column('nic_model', sa.String(length=32), nullable=True),
    sa.Column('server_id', sa.Integer(), nullable=True),
    sa.Column('nic_ipaddr', sa.String(length=32), nullable=True),
    sa.Column('nic_mac', sa.String(length=17), nullable=True),
    sa.Column('nic_netmask', sa.String(length=15), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['server_id'], ['server.server_id'], ),
    sa.PrimaryKeyConstraint('nic_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('nic')
    op.drop_table('memory')
    op.drop_table('disk')
    op.drop_table('api_token_permissions')
    op.drop_table('tasklog')
    op.drop_table('server')
    op.drop_table('business_unit_users')
    op.drop_table('api_token')
    op.drop_table('user_profile')
    op.drop_table('role_permissions')
    op.drop_table('asset')
    op.drop_table('tasks')
    op.drop_table('role')
    op.drop_table('os')
    op.drop_table('manufactory')
    op.drop_table('idc')
    op.drop_table('business_unit')
    op.drop_table('api_permission')
    # ### end Alembic commands ###
